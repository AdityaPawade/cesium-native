// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/Library.h"
#include "CesiumGltf/TextureInfo.h"

#include <CesiumUtility/JsonValue.h>

#include <cstdint>
#include <vector>

namespace CesiumGltf {
/**
 * @brief A texture containing property values.
 */
struct CESIUMGLTF_API ExtensionExtStructuralMetadataPropertyTextureProperty
    final : public TextureInfo {
  static inline constexpr const char* TypeName =
      "ExtensionExtStructuralMetadataPropertyTextureProperty";

  /**
   * @brief Texture channels containing property values, identified by index.
   */
  std::vector<int64_t> channels = {0};

  /**
   * @brief An offset to apply to property values. Only applicable to `SCALAR`,
   * `VECN`, and `MATN` types. Overrides the class property's `offset` if both
   * are defined.
   */
  CesiumUtility::JsonValue offset;

  /**
   * @brief A scale to apply to property values. Only applicable to `SCALAR`,
   * `VECN`, and `MATN` types. Overrides the class property's `scale` if both
   * are defined.
   */
  CesiumUtility::JsonValue scale;

  /**
   * @brief Maximum value present in the property values. Only applicable to
   * `SCALAR`, `VECN`, and `MATN` types. The `normalized`, `offset`, and `scale`
   * properties have no effect on the maximum, it always corresponds to the
   * actual value.
   */
  CesiumUtility::JsonValue max;

  /**
   * @brief Minimum value present in the property values. Only applicable to
   * `SCALAR`, `VECN`, and `MATN` types. The `normalized`, `offset`, and `scale`
   * properties have no effect on the maximum, it always corresponds to the
   * actual value.
   */
  CesiumUtility::JsonValue min;
};
} // namespace CesiumGltf
