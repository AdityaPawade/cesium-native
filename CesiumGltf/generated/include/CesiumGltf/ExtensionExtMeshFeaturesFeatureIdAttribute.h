// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "CesiumGltf/Library.h"

#include <CesiumUtility/ExtensibleObject.h>

#include <cstdint>
#include <optional>

namespace CesiumGltf {
/**
 * @brief Feature IDs to be used as indices to property arrays in the property
 * table.
 */
struct CESIUMGLTF_API ExtensionExtMeshFeaturesFeatureIdAttribute final
    : public CesiumUtility::ExtensibleObject {
  static inline constexpr const char* TypeName =
      "ExtensionExtMeshFeaturesFeatureIdAttribute";

  /**
   * @brief This integer value is used to construct a string in the format
   * `FEATURE_ID_<set index>` which is a reference to a key in
   * `mesh.primitives.attributes` (e.g. a value of `0` corresponds to
   * `FEATURE_ID_0`).
   */
  std::optional<int64_t> attribute;

  /**
   * @brief Initial value for an implicit feature ID range.
   */
  std::optional<int64_t> offset;

  /**
   * @brief Number of vertices for which to repeat each feature ID before
   * incrementing the ID by 1. If `repeat` is undefined, the feature ID for all
   * vertices is `offset`.
   */
  std::optional<int64_t> repeat;
};
} // namespace CesiumGltf
