name: cesium-native
on: [push, pull_request]
jobs:
  QuickChecks:
    name: "Quick Checks"
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Check source formatting
        run: |
          npm install
          npm run format -- --dry-run -Werror
  Documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Install Doxygen
        run: |
          sudo apt install -y doxygen
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Generate Documentation
        run: |
          cmake -B build -S .
          cmake --build build --target cesium-native-docs
      - name: Publish Documentation Artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: ReferenceDocumentation
          path: build/doc/html
  VS2019:
    name: "Windows + VS2019"
    runs-on: windows-2019
    steps:
      - name: Install nasm
        run: |
          choco install -y nasm
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Compile Debug Configuration
        run: |
          cmake -B build -S .
          cmake --build build --config Debug --parallel 4
      - name: Test Debug Configuration
        run: |
          cd build
          ctest -V
      - name: Compile RelWithDebInfo Configuration
        run: |
          cmake --build build --config RelWithDebInfo --parallel 4
      - name: Test RelWithDebInfo Configuration
        run: |
          cd build
          ctest -V
  VS2022:
    name: "Windows + VS2022"
    runs-on: windows-2022
    steps:
      - name: Install nasm
        run: |
          choco install -y nasm
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Compile Debug Configuration
        run: |
          cmake -B build -S .
          cmake --build build --config Debug --parallel 4
      - name: Test Debug Configuration
        run: |
          cd build
          ctest -V
      - name: Compile RelWithDebInfo Configuration
        run: |
          cmake --build build --config RelWithDebInfo --parallel 4
      - name: Test RelWithDebInfo Configuration
        run: |
          cd build
          ctest -V
  LinuxGCC:
    name: "Linux + GCC"
    runs-on: ubuntu-latest
    steps:
      - name: Install nasm
        run: |
          sudo apt-get install nasm
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Compile Debug Configuration
        run: |
          cmake -B build-debug -S . -DCMAKE_BUILD_TYPE:STRING=Debug
          cmake --build build-debug --parallel 4
      - name: Test Debug Configuration
        run: |
          cd build-debug
          ctest -V
      - name: Compile RelWithDebInfo Configuration
        run: |
          cmake -B build-release -S . -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
          cmake --build build-release --config RelWithDebInfo --parallel 4
      - name: Test RelWithDebInfo Configuration
        run: |
          cd build-release
          ctest -V
  LinuxClang:
    name: "Linux + Clang"
    runs-on: ubuntu-20.04
    env:
      CC: clang-12
      CXX: clang++-12
    steps:
      - name: Install nasm
        run: |
          sudo apt-get install nasm
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Compile Debug Configuration
        run: |
          cmake -B build-debug -S . -DCMAKE_BUILD_TYPE:STRING=Debug
          cmake --build build-debug --parallel 4
      - name: Test Debug Configuration
        run: |
          cd build-debug
          ctest -V
      - name: Compile RelWithDebInfo Configuration
        run: |
          cmake -B build-release -S . -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo
          cmake --build build-release --config RelWithDebInfo --parallel 4
      - name: Test RelWithDebInfo Configuration
        run: |
          cd build-release
          ctest -V
  macOS:
    runs-on: macos-14
    steps:
      - name: Set XCode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "14.3.1"
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Compile Debug Configuration - Intel
        run: |
          cmake -B build-debug-intel -S . -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15
          cmake --build build-debug-intel --parallel 4
      - name: Test Debug Configuration - Intel
        run: |
          cd build-debug-intel
          ctest -V
      - name: Compile Debug Configuration - Apple
        run: |
          cmake -B build-debug-apple -S . -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15
          cmake --build build-debug-apple --parallel 4
      - name: Test Debug Configuration - Apple
        run: |
          cd build-debug-apple
          ctest -V
      - name: Compile RelWithDebInfo Configuration - Intel
        run: |
          cmake -B build-release-intel -S . -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15
          cmake --build build-release-intel --config RelWithDebInfo --parallel 4
      - name: Test RelWithDebInfo Configuration - Intel
        run: |
          cd build-release-intel
          ctest -V
      - name: Compile RelWithDebInfo Configuration - Apple
        run: |
          cmake -B build-release-apple -S . -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15
          cmake --build build-release-apple --config RelWithDebInfo --parallel 4
      - name: Test RelWithDebInfo Configuration - Apple
        run: |
          cd build-release-apple
          ctest -V
