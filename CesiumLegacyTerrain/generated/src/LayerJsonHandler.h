// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "AvailabilityRectangleJsonHandler.h"

#include <CesiumJsonReader/ArrayJsonHandler.h>
#include <CesiumJsonReader/DoubleJsonHandler.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>
#include <CesiumJsonReader/IntegerJsonHandler.h>
#include <CesiumJsonReader/StringJsonHandler.h>
#include <CesiumLegacyTerrain/Layer.h>

namespace CesiumJsonReader {
class JsonReaderOptions;
}

namespace CesiumLegacyTerrain {
class LayerJsonHandler : public CesiumJsonReader::ExtensibleObjectJsonHandler {
public:
  using ValueType = CesiumLegacyTerrain::Layer;

  LayerJsonHandler(const CesiumJsonReader::JsonReaderOptions& options) noexcept;
  void reset(IJsonHandler* pParentHandler, CesiumLegacyTerrain::Layer* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

protected:
  IJsonHandler* readObjectKeyLayer(
      const std::string& objectType,
      const std::string_view& str,
      CesiumLegacyTerrain::Layer& o);

private:
  CesiumLegacyTerrain::Layer* _pObject = nullptr;
  CesiumJsonReader::StringJsonHandler _attribution;
  CesiumJsonReader::ArrayJsonHandler<
      std::vector<CesiumLegacyTerrain::AvailabilityRectangle>,
      CesiumJsonReader::ArrayJsonHandler<
          CesiumLegacyTerrain::AvailabilityRectangle,
          AvailabilityRectangleJsonHandler>>
      _available;
  CesiumJsonReader::
      ArrayJsonHandler<double, CesiumJsonReader::DoubleJsonHandler>
          _bounds;
  CesiumJsonReader::StringJsonHandler _description;
  CesiumJsonReader::
      ArrayJsonHandler<std::string, CesiumJsonReader::StringJsonHandler>
          _extensionsProperty;
  CesiumJsonReader::StringJsonHandler _format;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _maxzoom;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _minzoom;
  CesiumJsonReader::IntegerJsonHandler<int64_t> _metadataAvailability;
  CesiumJsonReader::StringJsonHandler _name;
  CesiumJsonReader::StringJsonHandler _parentUrl;
  CesiumJsonReader::StringJsonHandler _projection;
  CesiumJsonReader::StringJsonHandler _scheme;
  CesiumJsonReader::
      ArrayJsonHandler<std::string, CesiumJsonReader::StringJsonHandler>
          _tiles;
  CesiumJsonReader::StringJsonHandler _version;
};
} // namespace CesiumLegacyTerrain
