// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!

#include "ModelJsonWriter.h"

#include <CesiumGltf/Accessor.h>
#include <CesiumGltf/AccessorSparse.h>
#include <CesiumGltf/AccessorSparseIndices.h>
#include <CesiumGltf/AccessorSparseValues.h>
#include <CesiumGltf/Animation.h>
#include <CesiumGltf/AnimationChannel.h>
#include <CesiumGltf/AnimationChannelTarget.h>
#include <CesiumGltf/AnimationSampler.h>
#include <CesiumGltf/Asset.h>
#include <CesiumGltf/Buffer.h>
#include <CesiumGltf/BufferView.h>
#include <CesiumGltf/Camera.h>
#include <CesiumGltf/CameraOrthographic.h>
#include <CesiumGltf/CameraPerspective.h>
#include <CesiumGltf/ExtensionBufferExtMeshoptCompression.h>
#include <CesiumGltf/ExtensionBufferViewExtMeshoptCompression.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataClass.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataClassProperty.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataClassPropertyStatistics.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataClassStatistics.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataEnum.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataEnumValue.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataFeatureIdAttribute.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataFeatureIdTexture.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataFeatureIds.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataFeatureTable.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataFeatureTableProperty.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataFeatureTexture.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataSchema.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataStatistics.h>
#include <CesiumGltf/ExtensionExtFeatureMetadataTextureAccessor.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesClass.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesClassProperty.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesEnum.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesEnumValue.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesFeatureIdAttribute.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesPropertyTable.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesPropertyTableProperty.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesPropertyTexture.h>
#include <CesiumGltf/ExtensionExtMeshFeaturesSchema.h>
#include <CesiumGltf/ExtensionMaterialKhrMaterialsUnlit.h>
#include <CesiumGltf/ExtensionMeshPrimitiveCesiumTileEdges.h>
#include <CesiumGltf/ExtensionMeshPrimitiveExtFeatureMetadata.h>
#include <CesiumGltf/ExtensionMeshPrimitiveExtMeshFeatures.h>
#include <CesiumGltf/ExtensionMeshPrimitiveKhrDracoMeshCompression.h>
#include <CesiumGltf/ExtensionModelExtFeatureMetadata.h>
#include <CesiumGltf/ExtensionModelExtMeshFeatures.h>
#include <CesiumGltf/ExtensionNodeExtMeshFeatures.h>
#include <CesiumGltf/ExtensionNodeExtMeshGpuInstancing.h>
#include <CesiumGltf/Image.h>
#include <CesiumGltf/Material.h>
#include <CesiumGltf/MaterialNormalTextureInfo.h>
#include <CesiumGltf/MaterialOcclusionTextureInfo.h>
#include <CesiumGltf/MaterialPBRMetallicRoughness.h>
#include <CesiumGltf/Mesh.h>
#include <CesiumGltf/MeshPrimitive.h>
#include <CesiumGltf/Model.h>
#include <CesiumGltf/Node.h>
#include <CesiumGltf/Sampler.h>
#include <CesiumGltf/Scene.h>
#include <CesiumGltf/Skin.h>
#include <CesiumGltf/Texture.h>
#include <CesiumGltf/TextureInfo.h>
#include <CesiumJsonWriter/ExtensionWriterContext.h>
#include <CesiumJsonWriter/JsonObjectWriter.h>
#include <CesiumJsonWriter/JsonWriter.h>
#include <CesiumJsonWriter/writeJsonExtensions.h>
#include <CesiumUtility/JsonValue.h>

namespace CesiumGltfWriter {

namespace {

void writeJson(
    const CesiumGltf::ExtensionMeshPrimitiveKhrDracoMeshCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionMaterialKhrMaterialsUnlit& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionNodeExtMeshGpuInstancing& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionBufferExtMeshoptCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionBufferViewExtMeshoptCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionModelExtFeatureMetadata& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionMeshPrimitiveExtFeatureMetadata& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionMeshPrimitiveCesiumTileEdges& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionModelExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionMeshPrimitiveExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionNodeExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesFeatureIdAttribute& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTable& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTableProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesSchema& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesEnum& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesEnumValue& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesClass& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesClassProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIdTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataTextureAccessor& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::TextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIdAttribute& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIds& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTable& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTableProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataClassStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataClassPropertyStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataSchema& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataEnum& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataEnumValue& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataClass& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataClassProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Model& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Texture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Skin& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Scene& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Sampler& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Node& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Mesh& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::MeshPrimitive& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Material& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::MaterialOcclusionTextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::MaterialNormalTextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::MaterialPBRMetallicRoughness& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Image& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Camera& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::CameraPerspective& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::CameraOrthographic& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::BufferView& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Buffer& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Asset& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Animation& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::AnimationSampler& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::AnimationChannel& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::AnimationChannelTarget& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::Accessor& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::AccessorSparse& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::AccessorSparseValues& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

void writeJson(
    const CesiumGltf::AccessorSparseIndices& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

// Forward declaration to avoid circular dependency since some properties
// are vector of unordered_map and others are unordered_map of vector
template <typename T>
[[maybe_unused]] void writeJson(
    const std::vector<T>& list,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context);

[[maybe_unused]] void writeJson(
    const std::string& str,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& /* context */) {
  jsonWriter.String(str);
}

[[maybe_unused]] void writeJson(
    double val,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& /* context */) {
  jsonWriter.Double(val);
}

[[maybe_unused]] void writeJson(
    bool val,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& /* context */) {
  jsonWriter.Bool(val);
}

[[maybe_unused]] void writeJson(
    int64_t val,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& /* context */) {
  jsonWriter.Int64(val);
}

[[maybe_unused]] void writeJson(
    int32_t val,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& /* context */) {
  jsonWriter.Int64(val);
}

[[maybe_unused]] void writeJson(
    const CesiumUtility::JsonValue::Object& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& /* context */) {
  jsonWriter.StartObject();
  for (const auto& item : obj) {
    jsonWriter.Key(item.first);
    CesiumJsonWriter::writeJsonValue(item.second, jsonWriter);
  }
  jsonWriter.EndObject();
}

[[maybe_unused]] void writeJson(
    const CesiumUtility::JsonValue& value,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& /* context */) {
  CesiumJsonWriter::writeJsonValue(value, jsonWriter);
}

template <typename T>
[[maybe_unused]] void writeJson(
    const std::unordered_map<std::string, T>& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();
  for (const auto& item : obj) {
    jsonWriter.Key(item.first);
    writeJson(item.second, jsonWriter, context);
  }
  jsonWriter.EndObject();
}

template <typename T>
[[maybe_unused]] void writeJson(
    const std::vector<T>& list,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartArray();
  for (const T& item : list) {
    writeJson(item, jsonWriter, context);
  }
  jsonWriter.EndArray();
}

template <typename T>
[[maybe_unused]] void writeJson(
    const std::optional<T>& val,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  if (val.has_value()) {
    writeJson(*val, jsonWriter, context);
  } else {
    jsonWriter.Null();
  }
}

void writeJson(
    const CesiumGltf::ExtensionMeshPrimitiveKhrDracoMeshCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("bufferView");
  writeJson(obj.bufferView, jsonWriter, context);

  if (!obj.attributes.empty()) {
    jsonWriter.Key("attributes");
    writeJson(obj.attributes, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionMaterialKhrMaterialsUnlit& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionNodeExtMeshGpuInstancing& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.attributes.empty()) {
    jsonWriter.Key("attributes");
    writeJson(obj.attributes, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionBufferExtMeshoptCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.fallback != false) {
    jsonWriter.Key("fallback");
    writeJson(obj.fallback, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionBufferViewExtMeshoptCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("buffer");
  writeJson(obj.buffer, jsonWriter, context);

  jsonWriter.Key("byteOffset");
  writeJson(obj.byteOffset, jsonWriter, context);

  jsonWriter.Key("byteLength");
  writeJson(obj.byteLength, jsonWriter, context);

  jsonWriter.Key("byteStride");
  writeJson(obj.byteStride, jsonWriter, context);

  jsonWriter.Key("count");
  writeJson(obj.count, jsonWriter, context);

  jsonWriter.Key("mode");
  writeJson(obj.mode, jsonWriter, context);

  if (obj.filter !=
      CesiumGltf::ExtensionBufferViewExtMeshoptCompression::Filter::NONE) {
    jsonWriter.Key("filter");
    writeJson(obj.filter, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionModelExtFeatureMetadata& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.schema.has_value()) {
    jsonWriter.Key("schema");
    writeJson(obj.schema, jsonWriter, context);
  }

  if (obj.schemaUri.has_value()) {
    jsonWriter.Key("schemaUri");
    writeJson(obj.schemaUri, jsonWriter, context);
  }

  if (obj.statistics.has_value()) {
    jsonWriter.Key("statistics");
    writeJson(obj.statistics, jsonWriter, context);
  }

  if (!obj.featureTables.empty()) {
    jsonWriter.Key("featureTables");
    writeJson(obj.featureTables, jsonWriter, context);
  }

  if (!obj.featureTextures.empty()) {
    jsonWriter.Key("featureTextures");
    writeJson(obj.featureTextures, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionMeshPrimitiveExtFeatureMetadata& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.featureIdAttributes.empty()) {
    jsonWriter.Key("featureIdAttributes");
    writeJson(obj.featureIdAttributes, jsonWriter, context);
  }

  if (!obj.featureIdTextures.empty()) {
    jsonWriter.Key("featureIdTextures");
    writeJson(obj.featureIdTextures, jsonWriter, context);
  }

  if (!obj.featureTextures.empty()) {
    jsonWriter.Key("featureTextures");
    writeJson(obj.featureTextures, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionMeshPrimitiveCesiumTileEdges& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("left");
  writeJson(obj.left, jsonWriter, context);

  jsonWriter.Key("bottom");
  writeJson(obj.bottom, jsonWriter, context);

  jsonWriter.Key("right");
  writeJson(obj.right, jsonWriter, context);

  jsonWriter.Key("top");
  writeJson(obj.top, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionModelExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.schema.has_value()) {
    jsonWriter.Key("schema");
    writeJson(obj.schema, jsonWriter, context);
  }

  if (obj.schemaUri.has_value()) {
    jsonWriter.Key("schemaUri");
    writeJson(obj.schemaUri, jsonWriter, context);
  }

  if (!obj.propertyTables.empty()) {
    jsonWriter.Key("propertyTables");
    writeJson(obj.propertyTables, jsonWriter, context);
  }

  if (!obj.propertyTextures.empty()) {
    jsonWriter.Key("propertyTextures");
    writeJson(obj.propertyTextures, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionMeshPrimitiveExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.featureIds.empty()) {
    jsonWriter.Key("featureIds");
    writeJson(obj.featureIds, jsonWriter, context);
  }

  if (!obj.propertyTables.empty()) {
    jsonWriter.Key("propertyTables");
    writeJson(obj.propertyTables, jsonWriter, context);
  }

  if (!obj.propertyTextures.empty()) {
    jsonWriter.Key("propertyTextures");
    writeJson(obj.propertyTextures, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionNodeExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.featureIds.empty()) {
    jsonWriter.Key("featureIds");
    writeJson(obj.featureIds, jsonWriter, context);
  }

  if (!obj.propertyTables.empty()) {
    jsonWriter.Key("propertyTables");
    writeJson(obj.propertyTables, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesFeatureIdAttribute& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.attribute.has_value()) {
    jsonWriter.Key("attribute");
    writeJson(obj.attribute, jsonWriter, context);
  }

  if (obj.offset.has_value()) {
    jsonWriter.Key("offset");
    writeJson(obj.offset, jsonWriter, context);
  }

  if (obj.repeat.has_value()) {
    jsonWriter.Key("repeat");
    writeJson(obj.repeat, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  jsonWriter.Key("class");
  writeJson(obj.classProperty, jsonWriter, context);

  if (!obj.properties.empty()) {
    jsonWriter.Key("properties");
    writeJson(obj.properties, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTable& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  jsonWriter.Key("class");
  writeJson(obj.classProperty, jsonWriter, context);

  jsonWriter.Key("count");
  writeJson(obj.count, jsonWriter, context);

  if (!obj.properties.empty()) {
    jsonWriter.Key("properties");
    writeJson(obj.properties, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTableProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("bufferView");
  writeJson(obj.bufferView, jsonWriter, context);

  if (obj.arrayOffsetType !=
      CesiumGltf::ExtensionExtMeshFeaturesPropertyTableProperty::
          ArrayOffsetType::UINT32) {
    jsonWriter.Key("arrayOffsetType");
    writeJson(obj.arrayOffsetType, jsonWriter, context);
  }

  if (obj.arrayOffsetBufferView > -1) {
    jsonWriter.Key("arrayOffsetBufferView");
    writeJson(obj.arrayOffsetBufferView, jsonWriter, context);
  }

  if (obj.stringOffsetType !=
      CesiumGltf::ExtensionExtMeshFeaturesPropertyTableProperty::
          StringOffsetType::UINT32) {
    jsonWriter.Key("stringOffsetType");
    writeJson(obj.stringOffsetType, jsonWriter, context);
  }

  if (obj.stringOffsetBufferView > -1) {
    jsonWriter.Key("stringOffsetBufferView");
    writeJson(obj.stringOffsetBufferView, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesSchema& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.id.has_value()) {
    jsonWriter.Key("id");
    writeJson(obj.id, jsonWriter, context);
  }

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  if (obj.version.has_value()) {
    jsonWriter.Key("version");
    writeJson(obj.version, jsonWriter, context);
  }

  if (!obj.classes.empty()) {
    jsonWriter.Key("classes");
    writeJson(obj.classes, jsonWriter, context);
  }

  if (!obj.enums.empty()) {
    jsonWriter.Key("enums");
    writeJson(obj.enums, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesEnum& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  if (obj.valueType !=
      CesiumGltf::ExtensionExtMeshFeaturesEnum::ValueType::UINT16) {
    jsonWriter.Key("valueType");
    writeJson(obj.valueType, jsonWriter, context);
  }

  if (!obj.values.empty()) {
    jsonWriter.Key("values");
    writeJson(obj.values, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesEnumValue& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("name");
  writeJson(obj.name, jsonWriter, context);

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  jsonWriter.Key("value");
  writeJson(obj.value, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesClass& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  if (!obj.properties.empty()) {
    jsonWriter.Key("properties");
    writeJson(obj.properties, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtMeshFeaturesClassProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  if (obj.type !=
      CesiumGltf::ExtensionExtMeshFeaturesClassProperty::Type::SINGLE) {
    jsonWriter.Key("type");
    writeJson(obj.type, jsonWriter, context);
  }

  if (obj.enumType.has_value()) {
    jsonWriter.Key("enumType");
    writeJson(obj.enumType, jsonWriter, context);
  }

  jsonWriter.Key("componentType");
  writeJson(obj.componentType, jsonWriter, context);

  if (obj.componentCount.has_value()) {
    jsonWriter.Key("componentCount");
    writeJson(obj.componentCount, jsonWriter, context);
  }

  if (obj.normalized != false) {
    jsonWriter.Key("normalized");
    writeJson(obj.normalized, jsonWriter, context);
  }

  jsonWriter.Key("max");
  writeJson(obj.max, jsonWriter, context);

  jsonWriter.Key("min");
  writeJson(obj.min, jsonWriter, context);

  if (obj.required != false) {
    jsonWriter.Key("required");
    writeJson(obj.required, jsonWriter, context);
  }

  jsonWriter.Key("noData");
  writeJson(obj.noData, jsonWriter, context);

  if (obj.semantic.has_value()) {
    jsonWriter.Key("semantic");
    writeJson(obj.semantic, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIdTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("featureTable");
  writeJson(obj.featureTable, jsonWriter, context);

  jsonWriter.Key("featureIds");
  writeJson(obj.featureIds, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataTextureAccessor& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("channels");
  writeJson(obj.channels, jsonWriter, context);

  jsonWriter.Key("texture");
  writeJson(obj.texture, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::TextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("index");
  writeJson(obj.index, jsonWriter, context);

  if (obj.texCoord != 0) {
    jsonWriter.Key("texCoord");
    writeJson(obj.texCoord, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIdAttribute& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("featureTable");
  writeJson(obj.featureTable, jsonWriter, context);

  jsonWriter.Key("featureIds");
  writeJson(obj.featureIds, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIds& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.attribute.has_value()) {
    jsonWriter.Key("attribute");
    writeJson(obj.attribute, jsonWriter, context);
  }

  if (obj.constant != 0) {
    jsonWriter.Key("constant");
    writeJson(obj.constant, jsonWriter, context);
  }

  if (obj.divisor != 0) {
    jsonWriter.Key("divisor");
    writeJson(obj.divisor, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("class");
  writeJson(obj.classProperty, jsonWriter, context);

  if (!obj.properties.empty()) {
    jsonWriter.Key("properties");
    writeJson(obj.properties, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTable& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.classProperty.has_value()) {
    jsonWriter.Key("class");
    writeJson(obj.classProperty, jsonWriter, context);
  }

  jsonWriter.Key("count");
  writeJson(obj.count, jsonWriter, context);

  if (!obj.properties.empty()) {
    jsonWriter.Key("properties");
    writeJson(obj.properties, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTableProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("bufferView");
  writeJson(obj.bufferView, jsonWriter, context);

  if (obj.offsetType !=
      CesiumGltf::ExtensionExtFeatureMetadataFeatureTableProperty::OffsetType::
          UINT32) {
    jsonWriter.Key("offsetType");
    writeJson(obj.offsetType, jsonWriter, context);
  }

  if (obj.arrayOffsetBufferView > -1) {
    jsonWriter.Key("arrayOffsetBufferView");
    writeJson(obj.arrayOffsetBufferView, jsonWriter, context);
  }

  if (obj.stringOffsetBufferView > -1) {
    jsonWriter.Key("stringOffsetBufferView");
    writeJson(obj.stringOffsetBufferView, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.classes.empty()) {
    jsonWriter.Key("classes");
    writeJson(obj.classes, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataClassStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.count.has_value()) {
    jsonWriter.Key("count");
    writeJson(obj.count, jsonWriter, context);
  }

  if (!obj.properties.empty()) {
    jsonWriter.Key("properties");
    writeJson(obj.properties, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataClassPropertyStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("min");
  writeJson(obj.min, jsonWriter, context);

  jsonWriter.Key("max");
  writeJson(obj.max, jsonWriter, context);

  jsonWriter.Key("mean");
  writeJson(obj.mean, jsonWriter, context);

  jsonWriter.Key("median");
  writeJson(obj.median, jsonWriter, context);

  jsonWriter.Key("standardDeviation");
  writeJson(obj.standardDeviation, jsonWriter, context);

  jsonWriter.Key("variance");
  writeJson(obj.variance, jsonWriter, context);

  jsonWriter.Key("sum");
  writeJson(obj.sum, jsonWriter, context);

  if (!obj.occurrences.empty()) {
    jsonWriter.Key("occurrences");
    writeJson(obj.occurrences, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataSchema& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  if (obj.version.has_value()) {
    jsonWriter.Key("version");
    writeJson(obj.version, jsonWriter, context);
  }

  if (!obj.classes.empty()) {
    jsonWriter.Key("classes");
    writeJson(obj.classes, jsonWriter, context);
  }

  if (!obj.enums.empty()) {
    jsonWriter.Key("enums");
    writeJson(obj.enums, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataEnum& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  if (obj.valueType !=
      CesiumGltf::ExtensionExtFeatureMetadataEnum::ValueType::UINT16) {
    jsonWriter.Key("valueType");
    writeJson(obj.valueType, jsonWriter, context);
  }

  if (!obj.values.empty()) {
    jsonWriter.Key("values");
    writeJson(obj.values, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataEnumValue& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("name");
  writeJson(obj.name, jsonWriter, context);

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  jsonWriter.Key("value");
  writeJson(obj.value, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataClass& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  if (!obj.properties.empty()) {
    jsonWriter.Key("properties");
    writeJson(obj.properties, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::ExtensionExtFeatureMetadataClassProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.name.has_value()) {
    jsonWriter.Key("name");
    writeJson(obj.name, jsonWriter, context);
  }

  if (obj.description.has_value()) {
    jsonWriter.Key("description");
    writeJson(obj.description, jsonWriter, context);
  }

  jsonWriter.Key("type");
  writeJson(obj.type, jsonWriter, context);

  if (obj.enumType.has_value()) {
    jsonWriter.Key("enumType");
    writeJson(obj.enumType, jsonWriter, context);
  }

  if (obj.componentType.has_value()) {
    jsonWriter.Key("componentType");
    writeJson(obj.componentType, jsonWriter, context);
  }

  if (obj.componentCount.has_value()) {
    jsonWriter.Key("componentCount");
    writeJson(obj.componentCount, jsonWriter, context);
  }

  if (obj.normalized != false) {
    jsonWriter.Key("normalized");
    writeJson(obj.normalized, jsonWriter, context);
  }

  jsonWriter.Key("max");
  writeJson(obj.max, jsonWriter, context);

  jsonWriter.Key("min");
  writeJson(obj.min, jsonWriter, context);

  jsonWriter.Key("default");
  writeJson(obj.defaultProperty, jsonWriter, context);

  if (obj.optional != false) {
    jsonWriter.Key("optional");
    writeJson(obj.optional, jsonWriter, context);
  }

  if (obj.semantic.has_value()) {
    jsonWriter.Key("semantic");
    writeJson(obj.semantic, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Model& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.extensionsUsed.empty()) {
    jsonWriter.Key("extensionsUsed");
    writeJson(obj.extensionsUsed, jsonWriter, context);
  }

  if (!obj.extensionsRequired.empty()) {
    jsonWriter.Key("extensionsRequired");
    writeJson(obj.extensionsRequired, jsonWriter, context);
  }

  if (!obj.accessors.empty()) {
    jsonWriter.Key("accessors");
    writeJson(obj.accessors, jsonWriter, context);
  }

  if (!obj.animations.empty()) {
    jsonWriter.Key("animations");
    writeJson(obj.animations, jsonWriter, context);
  }

  jsonWriter.Key("asset");
  writeJson(obj.asset, jsonWriter, context);

  if (!obj.buffers.empty()) {
    jsonWriter.Key("buffers");
    writeJson(obj.buffers, jsonWriter, context);
  }

  if (!obj.bufferViews.empty()) {
    jsonWriter.Key("bufferViews");
    writeJson(obj.bufferViews, jsonWriter, context);
  }

  if (!obj.cameras.empty()) {
    jsonWriter.Key("cameras");
    writeJson(obj.cameras, jsonWriter, context);
  }

  if (!obj.images.empty()) {
    jsonWriter.Key("images");
    writeJson(obj.images, jsonWriter, context);
  }

  if (!obj.materials.empty()) {
    jsonWriter.Key("materials");
    writeJson(obj.materials, jsonWriter, context);
  }

  if (!obj.meshes.empty()) {
    jsonWriter.Key("meshes");
    writeJson(obj.meshes, jsonWriter, context);
  }

  if (!obj.nodes.empty()) {
    jsonWriter.Key("nodes");
    writeJson(obj.nodes, jsonWriter, context);
  }

  if (!obj.samplers.empty()) {
    jsonWriter.Key("samplers");
    writeJson(obj.samplers, jsonWriter, context);
  }

  if (obj.scene > -1) {
    jsonWriter.Key("scene");
    writeJson(obj.scene, jsonWriter, context);
  }

  if (!obj.scenes.empty()) {
    jsonWriter.Key("scenes");
    writeJson(obj.scenes, jsonWriter, context);
  }

  if (!obj.skins.empty()) {
    jsonWriter.Key("skins");
    writeJson(obj.skins, jsonWriter, context);
  }

  if (!obj.textures.empty()) {
    jsonWriter.Key("textures");
    writeJson(obj.textures, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Texture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.sampler > -1) {
    jsonWriter.Key("sampler");
    writeJson(obj.sampler, jsonWriter, context);
  }

  if (obj.source > -1) {
    jsonWriter.Key("source");
    writeJson(obj.source, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Skin& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.inverseBindMatrices > -1) {
    jsonWriter.Key("inverseBindMatrices");
    writeJson(obj.inverseBindMatrices, jsonWriter, context);
  }

  if (obj.skeleton > -1) {
    jsonWriter.Key("skeleton");
    writeJson(obj.skeleton, jsonWriter, context);
  }

  if (!obj.joints.empty()) {
    jsonWriter.Key("joints");
    writeJson(obj.joints, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Scene& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.nodes.empty()) {
    jsonWriter.Key("nodes");
    writeJson(obj.nodes, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Sampler& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.magFilter.has_value()) {
    jsonWriter.Key("magFilter");
    writeJson(obj.magFilter, jsonWriter, context);
  }

  if (obj.minFilter.has_value()) {
    jsonWriter.Key("minFilter");
    writeJson(obj.minFilter, jsonWriter, context);
  }

  if (obj.wrapS != CesiumGltf::Sampler::WrapS::REPEAT) {
    jsonWriter.Key("wrapS");
    writeJson(obj.wrapS, jsonWriter, context);
  }

  if (obj.wrapT != CesiumGltf::Sampler::WrapT::REPEAT) {
    jsonWriter.Key("wrapT");
    writeJson(obj.wrapT, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Node& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.camera > -1) {
    jsonWriter.Key("camera");
    writeJson(obj.camera, jsonWriter, context);
  }

  if (!obj.children.empty()) {
    jsonWriter.Key("children");
    writeJson(obj.children, jsonWriter, context);
  }

  if (obj.skin > -1) {
    jsonWriter.Key("skin");
    writeJson(obj.skin, jsonWriter, context);
  }

  static const std::vector<double> matrixDefault =
      {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1};
  if (obj.matrix != matrixDefault) {
    jsonWriter.Key("matrix");
    writeJson(obj.matrix, jsonWriter, context);
  }

  if (obj.mesh > -1) {
    jsonWriter.Key("mesh");
    writeJson(obj.mesh, jsonWriter, context);
  }

  static const std::vector<double> rotationDefault = {0, 0, 0, 1};
  if (obj.rotation != rotationDefault) {
    jsonWriter.Key("rotation");
    writeJson(obj.rotation, jsonWriter, context);
  }

  static const std::vector<double> scaleDefault = {1, 1, 1};
  if (obj.scale != scaleDefault) {
    jsonWriter.Key("scale");
    writeJson(obj.scale, jsonWriter, context);
  }

  static const std::vector<double> translationDefault = {0, 0, 0};
  if (obj.translation != translationDefault) {
    jsonWriter.Key("translation");
    writeJson(obj.translation, jsonWriter, context);
  }

  if (!obj.weights.empty()) {
    jsonWriter.Key("weights");
    writeJson(obj.weights, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Mesh& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.primitives.empty()) {
    jsonWriter.Key("primitives");
    writeJson(obj.primitives, jsonWriter, context);
  }

  if (!obj.weights.empty()) {
    jsonWriter.Key("weights");
    writeJson(obj.weights, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::MeshPrimitive& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.attributes.empty()) {
    jsonWriter.Key("attributes");
    writeJson(obj.attributes, jsonWriter, context);
  }

  if (obj.indices > -1) {
    jsonWriter.Key("indices");
    writeJson(obj.indices, jsonWriter, context);
  }

  if (obj.material > -1) {
    jsonWriter.Key("material");
    writeJson(obj.material, jsonWriter, context);
  }

  if (obj.mode != CesiumGltf::MeshPrimitive::Mode::TRIANGLES) {
    jsonWriter.Key("mode");
    writeJson(obj.mode, jsonWriter, context);
  }

  if (!obj.targets.empty()) {
    jsonWriter.Key("targets");
    writeJson(obj.targets, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Material& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.pbrMetallicRoughness.has_value()) {
    jsonWriter.Key("pbrMetallicRoughness");
    writeJson(obj.pbrMetallicRoughness, jsonWriter, context);
  }

  if (obj.normalTexture.has_value()) {
    jsonWriter.Key("normalTexture");
    writeJson(obj.normalTexture, jsonWriter, context);
  }

  if (obj.occlusionTexture.has_value()) {
    jsonWriter.Key("occlusionTexture");
    writeJson(obj.occlusionTexture, jsonWriter, context);
  }

  if (obj.emissiveTexture.has_value()) {
    jsonWriter.Key("emissiveTexture");
    writeJson(obj.emissiveTexture, jsonWriter, context);
  }

  static const std::vector<double> emissiveFactorDefault = {0, 0, 0};
  if (obj.emissiveFactor != emissiveFactorDefault) {
    jsonWriter.Key("emissiveFactor");
    writeJson(obj.emissiveFactor, jsonWriter, context);
  }

  if (obj.alphaMode != CesiumGltf::Material::AlphaMode::OPAQUE_ENUM) {
    jsonWriter.Key("alphaMode");
    writeJson(obj.alphaMode, jsonWriter, context);
  }

  if (obj.alphaCutoff != 0.5) {
    jsonWriter.Key("alphaCutoff");
    writeJson(obj.alphaCutoff, jsonWriter, context);
  }

  if (obj.doubleSided != false) {
    jsonWriter.Key("doubleSided");
    writeJson(obj.doubleSided, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::MaterialOcclusionTextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.strength != 1) {
    jsonWriter.Key("strength");
    writeJson(obj.strength, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::MaterialNormalTextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.scale != 1) {
    jsonWriter.Key("scale");
    writeJson(obj.scale, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::MaterialPBRMetallicRoughness& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  static const std::vector<double> baseColorFactorDefault = {1, 1, 1, 1};
  if (obj.baseColorFactor != baseColorFactorDefault) {
    jsonWriter.Key("baseColorFactor");
    writeJson(obj.baseColorFactor, jsonWriter, context);
  }

  if (obj.baseColorTexture.has_value()) {
    jsonWriter.Key("baseColorTexture");
    writeJson(obj.baseColorTexture, jsonWriter, context);
  }

  if (obj.metallicFactor != 1) {
    jsonWriter.Key("metallicFactor");
    writeJson(obj.metallicFactor, jsonWriter, context);
  }

  if (obj.roughnessFactor != 1) {
    jsonWriter.Key("roughnessFactor");
    writeJson(obj.roughnessFactor, jsonWriter, context);
  }

  if (obj.metallicRoughnessTexture.has_value()) {
    jsonWriter.Key("metallicRoughnessTexture");
    writeJson(obj.metallicRoughnessTexture, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Image& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.uri.has_value()) {
    jsonWriter.Key("uri");
    writeJson(obj.uri, jsonWriter, context);
  }

  if (obj.mimeType.has_value()) {
    jsonWriter.Key("mimeType");
    writeJson(obj.mimeType, jsonWriter, context);
  }

  if (obj.bufferView > -1) {
    jsonWriter.Key("bufferView");
    writeJson(obj.bufferView, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Camera& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.orthographic.has_value()) {
    jsonWriter.Key("orthographic");
    writeJson(obj.orthographic, jsonWriter, context);
  }

  if (obj.perspective.has_value()) {
    jsonWriter.Key("perspective");
    writeJson(obj.perspective, jsonWriter, context);
  }

  jsonWriter.Key("type");
  writeJson(obj.type, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::CameraPerspective& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.aspectRatio.has_value()) {
    jsonWriter.Key("aspectRatio");
    writeJson(obj.aspectRatio, jsonWriter, context);
  }

  jsonWriter.Key("yfov");
  writeJson(obj.yfov, jsonWriter, context);

  if (obj.zfar.has_value()) {
    jsonWriter.Key("zfar");
    writeJson(obj.zfar, jsonWriter, context);
  }

  jsonWriter.Key("znear");
  writeJson(obj.znear, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::CameraOrthographic& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("xmag");
  writeJson(obj.xmag, jsonWriter, context);

  jsonWriter.Key("ymag");
  writeJson(obj.ymag, jsonWriter, context);

  jsonWriter.Key("zfar");
  writeJson(obj.zfar, jsonWriter, context);

  jsonWriter.Key("znear");
  writeJson(obj.znear, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::BufferView& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("buffer");
  writeJson(obj.buffer, jsonWriter, context);

  jsonWriter.Key("byteOffset");
  writeJson(obj.byteOffset, jsonWriter, context);

  jsonWriter.Key("byteLength");
  writeJson(obj.byteLength, jsonWriter, context);

  if (obj.byteStride.has_value()) {
    jsonWriter.Key("byteStride");
    writeJson(obj.byteStride, jsonWriter, context);
  }

  if (obj.target.has_value()) {
    jsonWriter.Key("target");
    writeJson(obj.target, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Buffer& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.uri.has_value()) {
    jsonWriter.Key("uri");
    writeJson(obj.uri, jsonWriter, context);
  }

  jsonWriter.Key("byteLength");
  writeJson(obj.byteLength, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Asset& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.copyright.has_value()) {
    jsonWriter.Key("copyright");
    writeJson(obj.copyright, jsonWriter, context);
  }

  if (obj.generator.has_value()) {
    jsonWriter.Key("generator");
    writeJson(obj.generator, jsonWriter, context);
  }

  jsonWriter.Key("version");
  writeJson(obj.version, jsonWriter, context);

  if (obj.minVersion.has_value()) {
    jsonWriter.Key("minVersion");
    writeJson(obj.minVersion, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Animation& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (!obj.channels.empty()) {
    jsonWriter.Key("channels");
    writeJson(obj.channels, jsonWriter, context);
  }

  if (!obj.samplers.empty()) {
    jsonWriter.Key("samplers");
    writeJson(obj.samplers, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::AnimationSampler& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("input");
  writeJson(obj.input, jsonWriter, context);

  if (obj.interpolation !=
      CesiumGltf::AnimationSampler::Interpolation::LINEAR) {
    jsonWriter.Key("interpolation");
    writeJson(obj.interpolation, jsonWriter, context);
  }

  jsonWriter.Key("output");
  writeJson(obj.output, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::AnimationChannel& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("sampler");
  writeJson(obj.sampler, jsonWriter, context);

  jsonWriter.Key("target");
  writeJson(obj.target, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::AnimationChannelTarget& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.node > -1) {
    jsonWriter.Key("node");
    writeJson(obj.node, jsonWriter, context);
  }

  jsonWriter.Key("path");
  writeJson(obj.path, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::Accessor& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  if (obj.bufferView > -1) {
    jsonWriter.Key("bufferView");
    writeJson(obj.bufferView, jsonWriter, context);
  }

  jsonWriter.Key("byteOffset");
  writeJson(obj.byteOffset, jsonWriter, context);

  jsonWriter.Key("componentType");
  writeJson(obj.componentType, jsonWriter, context);

  if (obj.normalized != false) {
    jsonWriter.Key("normalized");
    writeJson(obj.normalized, jsonWriter, context);
  }

  jsonWriter.Key("count");
  writeJson(obj.count, jsonWriter, context);

  jsonWriter.Key("type");
  writeJson(obj.type, jsonWriter, context);

  if (!obj.max.empty()) {
    jsonWriter.Key("max");
    writeJson(obj.max, jsonWriter, context);
  }

  if (!obj.min.empty()) {
    jsonWriter.Key("min");
    writeJson(obj.min, jsonWriter, context);
  }

  if (obj.sparse.has_value()) {
    jsonWriter.Key("sparse");
    writeJson(obj.sparse, jsonWriter, context);
  }

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::AccessorSparse& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("count");
  writeJson(obj.count, jsonWriter, context);

  jsonWriter.Key("indices");
  writeJson(obj.indices, jsonWriter, context);

  jsonWriter.Key("values");
  writeJson(obj.values, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::AccessorSparseValues& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("bufferView");
  writeJson(obj.bufferView, jsonWriter, context);

  jsonWriter.Key("byteOffset");
  writeJson(obj.byteOffset, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

void writeJson(
    const CesiumGltf::AccessorSparseIndices& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  jsonWriter.StartObject();

  jsonWriter.Key("bufferView");
  writeJson(obj.bufferView, jsonWriter, context);

  jsonWriter.Key("byteOffset");
  writeJson(obj.byteOffset, jsonWriter, context);

  jsonWriter.Key("componentType");
  writeJson(obj.componentType, jsonWriter, context);

  if (!obj.extensions.empty()) {
    jsonWriter.Key("extensions");
    writeJsonExtensions(obj, jsonWriter, context);
  }

  if (!obj.extras.empty()) {
    jsonWriter.Key("extras");
    writeJson(obj.extras, jsonWriter, context);
  }

  jsonWriter.EndObject();
}

} // namespace

void ExtensionMeshPrimitiveKhrDracoMeshCompressionJsonWriter::write(
    const CesiumGltf::ExtensionMeshPrimitiveKhrDracoMeshCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionMaterialKhrMaterialsUnlitJsonWriter::write(
    const CesiumGltf::ExtensionMaterialKhrMaterialsUnlit& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionNodeExtMeshGpuInstancingJsonWriter::write(
    const CesiumGltf::ExtensionNodeExtMeshGpuInstancing& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionBufferExtMeshoptCompressionJsonWriter::write(
    const CesiumGltf::ExtensionBufferExtMeshoptCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionBufferViewExtMeshoptCompressionJsonWriter::write(
    const CesiumGltf::ExtensionBufferViewExtMeshoptCompression& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionModelExtFeatureMetadataJsonWriter::write(
    const CesiumGltf::ExtensionModelExtFeatureMetadata& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionMeshPrimitiveExtFeatureMetadataJsonWriter::write(
    const CesiumGltf::ExtensionMeshPrimitiveExtFeatureMetadata& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionMeshPrimitiveCesiumTileEdgesJsonWriter::write(
    const CesiumGltf::ExtensionMeshPrimitiveCesiumTileEdges& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionModelExtMeshFeaturesJsonWriter::write(
    const CesiumGltf::ExtensionModelExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionMeshPrimitiveExtMeshFeaturesJsonWriter::write(
    const CesiumGltf::ExtensionMeshPrimitiveExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionNodeExtMeshFeaturesJsonWriter::write(
    const CesiumGltf::ExtensionNodeExtMeshFeatures& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesFeatureIdAttributeJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesFeatureIdAttribute& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesPropertyTextureJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesPropertyTableJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTable& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesPropertyTablePropertyJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesPropertyTableProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesSchemaJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesSchema& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesEnumJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesEnum& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesEnumValueJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesEnumValue& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesClassJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesClass& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtMeshFeaturesClassPropertyJsonWriter::write(
    const CesiumGltf::ExtensionExtMeshFeaturesClassProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataFeatureIdTextureJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIdTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataTextureAccessorJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataTextureAccessor& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void TextureInfoJsonWriter::write(
    const CesiumGltf::TextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataFeatureIdAttributeJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIdAttribute& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataFeatureIdsJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureIds& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataFeatureTextureJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTexture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataFeatureTableJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTable& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataFeatureTablePropertyJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataFeatureTableProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataStatisticsJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataClassStatisticsJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataClassStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataClassPropertyStatisticsJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataClassPropertyStatistics& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataSchemaJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataSchema& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataEnumJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataEnum& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataEnumValueJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataEnumValue& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataClassJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataClass& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ExtensionExtFeatureMetadataClassPropertyJsonWriter::write(
    const CesiumGltf::ExtensionExtFeatureMetadataClassProperty& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ModelJsonWriter::write(
    const CesiumGltf::Model& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void TextureJsonWriter::write(
    const CesiumGltf::Texture& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void SkinJsonWriter::write(
    const CesiumGltf::Skin& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void SceneJsonWriter::write(
    const CesiumGltf::Scene& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void SamplerJsonWriter::write(
    const CesiumGltf::Sampler& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void NodeJsonWriter::write(
    const CesiumGltf::Node& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void MeshJsonWriter::write(
    const CesiumGltf::Mesh& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void MeshPrimitiveJsonWriter::write(
    const CesiumGltf::MeshPrimitive& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void MaterialJsonWriter::write(
    const CesiumGltf::Material& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void MaterialOcclusionTextureInfoJsonWriter::write(
    const CesiumGltf::MaterialOcclusionTextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void MaterialNormalTextureInfoJsonWriter::write(
    const CesiumGltf::MaterialNormalTextureInfo& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void MaterialPBRMetallicRoughnessJsonWriter::write(
    const CesiumGltf::MaterialPBRMetallicRoughness& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void ImageJsonWriter::write(
    const CesiumGltf::Image& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void CameraJsonWriter::write(
    const CesiumGltf::Camera& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void CameraPerspectiveJsonWriter::write(
    const CesiumGltf::CameraPerspective& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void CameraOrthographicJsonWriter::write(
    const CesiumGltf::CameraOrthographic& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void BufferViewJsonWriter::write(
    const CesiumGltf::BufferView& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void BufferJsonWriter::write(
    const CesiumGltf::Buffer& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AssetJsonWriter::write(
    const CesiumGltf::Asset& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AnimationJsonWriter::write(
    const CesiumGltf::Animation& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AnimationSamplerJsonWriter::write(
    const CesiumGltf::AnimationSampler& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AnimationChannelJsonWriter::write(
    const CesiumGltf::AnimationChannel& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AnimationChannelTargetJsonWriter::write(
    const CesiumGltf::AnimationChannelTarget& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AccessorJsonWriter::write(
    const CesiumGltf::Accessor& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AccessorSparseJsonWriter::write(
    const CesiumGltf::AccessorSparse& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AccessorSparseValuesJsonWriter::write(
    const CesiumGltf::AccessorSparseValues& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

void AccessorSparseIndicesJsonWriter::write(
    const CesiumGltf::AccessorSparseIndices& obj,
    CesiumJsonWriter::JsonWriter& jsonWriter,
    const CesiumJsonWriter::ExtensionWriterContext& context) {
  writeJson(obj, jsonWriter, context);
}

} // namespace CesiumGltfWriter
